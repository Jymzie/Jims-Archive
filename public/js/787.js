"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[787],{9787:(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});const r={data:function(){return{requirements:[{title:"MongoDB database",link:"React_Database"}]}},mounted:function(){window.Prism=window.Prism||{},window.Prism.manual=!0,Prism.highlightAll()}};const a=(0,n(7658).A)(r,function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"ma-4"},[n("v-row",[n("v-col",{attrs:{cols:"12",xl:"10",lg:"9",md:"9",sm:"8"}},[n("div",{staticClass:"d-flex align-center",staticStyle:{height:"100%"}},[n("h1",[e._v("Setup MERN API")])])]),e._v(" "),n("v-col",[n("h3",[e._v("REQUIREMENTS:")]),e._v(" "),n("ol",e._l(e.requirements,function(t,r){return n("li",{key:r},[null==t.link?n("span",[e._v(e._s(t.title))]):n("a",{attrs:{href:t.link,target:"_blank"}},[e._v(e._s(t.title))])])}),0)])],1),e._v(" "),n("v-card",{staticClass:"mt-5"},[n("v-card-title",{staticClass:"blue white--text"},[e._v("SETUP")]),e._v(" "),n("v-card-text",[n("ul",[n("li",[e._v("Open CMD and go to Project folder\n                    "),n("pre",{staticClass:"command-line",attrs:{"data-prompt":"C:\\Users\\Jim>"}},[n("code",{staticClass:"language-bash"},[e._v("\n                        cd C:\\Apache24\\htdocs\\projectname\n                    ")])])]),e._v(" "),n("li",[e._v("Open the Project to VSCode\n                    "),n("pre",{staticClass:"command-line",attrs:{"data-prompt":"C:\\Apache24\\htdocs\\projectname>"}},[n("code",{staticClass:"language-bash"},[e._v("\n                        code .\n                    ")])])]),e._v(" "),n("li",[e._v("Edit "),n("b",[e._v("server/server.ts")]),e._v(" with this code:\n                    "),n("pre",[n("code",{staticClass:"language-js"},[e._v("\n                        import express from 'express';\n                        import cors from 'cors';\n                        import routes from \"./routes.ts\";\n                        import dotenv from 'dotenv';\n\n                        dotenv.config();\n                        const app = express();\n\n                        app.use(cors());\n                        app.use(express.json());\n\n                        const PORT = process.env.PORT || 8080;\n\n                        app.use((req, res, next) => {\n                            console.log(`Request received: ${req.method} ${req.url}`);\n                            next(); // Passes control to the next middleware or route handler\n                        });\n\n                        app.use(\"/api\", routes);\n\n                        app.listen(PORT, () => {\n                            console.log(`Server is running on port ${PORT}`);\n                        });\n                    ")])])]),e._v(" "),n("li",[e._v("Inside the "),n("b",[e._v("server")]),e._v(" folder, create "),n("b",[e._v("routes.ts")]),e._v(" and put this code:\n                    "),n("pre",[n("code",{staticClass:"language-js"},[e._v('\n                        import express from \'express\';\n\n                        const router = express.Router();\n                        import sampleControllers from "./controllers/sampleController.ts";\n\n                        router.get("/sample", sampleControllers.get_table);\n                        router.post("/sample/res", sampleControllers.insert_data);\n\n                        export default router;\n                    ')])])]),e._v(" "),n("i",[n("b",[e._v("NOTE:")]),e._v(" The following steps has a ready-to-use and installed "),n("b",[e._v("MongoDB")]),e._v(" database, see documentation "),n("a",{attrs:{href:this.$url+"/React_Database",target:"_blank"}},[e._v("here")])]),e._v(" "),n("li",[e._v("Edit "),n("b",[e._v(".env MONGO_URI")]),e._v(" "),n("pre",[n("code",{staticClass:"language-ini"},[e._v("\n                        MONGO_URI=mongodb://localhost:27017\n                    ")])])]),e._v(" "),n("li",[e._v("Go to "),n("b",[e._v("server")]),e._v(" folder, create "),n("b",[e._v("connection.ts")]),e._v(" and put this code:\n                    "),n("pre",[n("code",{staticClass:"language-js"},[e._v('\n                        import { MongoClient, ServerApiVersion } from "mongodb";\n                        import dotenv from \'dotenv\';\n\n                        dotenv.config();\n                        const uri = process.env.MONGO_URI || "";\n                        const client = new MongoClient(uri, {\n                            serverApi: {\n                                version: ServerApiVersion.v1,\n                                strict: true,\n                                deprecationErrors: true,\n                            },\n                        });\n\n                        try {\n                            // Connect the client to the server\n                            await client.connect();\n                            // Send a ping to confirm a successful connection\n                            await client.db("admin").command({ ping: 1 });\n                            console.log(\n                            "Pinged your deployment. You successfully connected to MongoDB!"\n                            );\n                        } catch(err) {\n                            console.error(err);\n                        }\n\n                        let sample_db = client.db("sample_db");\n\n                        export default {sample_db};\n                    ')])])]),e._v(" "),n("li",[e._v("Inside the "),n("b",[e._v("server")]),e._v(" folder, create "),n("b",[e._v("controllers")]),e._v(" folder. Inside it, create "),n("b",[e._v("sampleController.ts")]),e._v(" and put this code:\n                    "),n("pre",[n("code",{staticClass:"language-js"},[e._v('\n                        import db from "../connection.ts"\n\n                        const get_table = async (req, res) => {\n                            try {\n                                let result = await db.sample_db.collection("user").find().toArray();\n                                res.send(result);\n                            } catch (err) {\n                                return res.status(400).json({ error: err.message });\n                            }\n                        };\n\n                        const insert_data = async (req, res) => {\n                            try {\n                                let params = req.body\n                                await db.sample_db.collection("user").insertOne({name:params.name, age:params.age});\n                                res.send(\'successful\');\n\n                            } catch (err) {\n                                return res.status(400).json({ error: err.message });\n                            }\n                        };\n\n                        export default {get_table, insert_data}; \n                    ')])])]),e._v(" "),n("li",[e._v("Add this code to "),n("b",[e._v("vite.config.ts")]),e._v(" under "),n("b",[e._v("plugins")]),e._v(" to simplify axios url\n                    "),n("pre",[n("code",{staticClass:"language-js"},[e._v("\n                       server:{\n                            proxy:{\n                                '/api':{\n                                    target:'http://localhost:8080',\n                                    changeOrigin:true\n                                }\n                            }\n                        }\n                    ")])])]),e._v(" "),n("li",[e._v("Edit "),n("b",[e._v("src/components/pages/Home.tsx")]),e._v(" "),n("pre",[n("code",{staticClass:"language-js"},[e._v("\n                        import { useState, useEffect } from 'react';\n                        import axios from 'axios';\n\n\n                        function Home() {\n                            let [name, setName] = useState('')\n                            let [age, setAge] = useState('')\n                            let [content, setContent] = useState([])\n\n                            const mGetTable = () => {\n                                axios.get('api/sample')\n                                .then((res) => {\n                                    setContent(res.data)\n                                })\n                            }\n\n                            const mInsertData = () => {\n                                let req = {name:name,age:age}\n                                axios.post('api/sample/res',req)\n                                .then(() => {\n                                    mGetTable()\n                                })\n                            }\n\n                            useEffect(() => {\n                                mGetTable();\n                            }, []);\n\n                            return (\n                                //put html code here\n                            )\n                        }\n                        export default Home\n                    ")])]),e._v(" "),n("pre",[n("code",{staticClass:"language-html"},[e._v('\n                        \n                            //Home.tsx html code \n                            <div className=\'grid grid-cols-2 gap-2\'>\n                                <div className="w-72 max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow-sm dark:bg-gray-800 dark:border-gray-700">  \n                                    <input type="text" value={name} onChange={(event) => setName(event.target.value)} className="mb-1 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Name" required />\n                                    <input type="number" value={age} onChange={(event) => setAge(event.target.value)} className="mb-1 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Age" required />\n                                    <button type=\'button\' onClick={mInsertData} className=" text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">\n                                        Insert\n                                    </button>\n                                </div>\n                                <div className="w-72 max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow-sm dark:bg-gray-800 dark:border-gray-700">\n                                    <table className=\'w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\'>\n                                        <thead className=\'text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\'>\n                                            <tr>\n                                                <th>name</th>\n                                                <th>age</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {content.map((items,i) => (\n                                            <tr key={i} className=\'bg-white border-b dark:bg-gray-800 dark:border-gray-700 border-gray-200\'> \n                                                <td>{items.name}</td>\n                                                <td>{items.age}</td>\n                                            </tr>\n                                            ))}\n                                        \n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                    ')])])])])])],1),e._v(" "),n("v-card",{staticClass:"mt-5"},[n("v-card-title",{staticClass:"blue white--text"},[e._v("DEPLOYMENT")]),e._v(" "),n("v-card-text",[n("ul",[n("li",[e._v("Go back to CMD and deploy the project\n                    "),n("pre",{staticClass:"command-line",attrs:{"data-prompt":"C:\\Apache24\\htdocs\\projectname>"}},[n("code",{staticClass:"language-bash"},[e._v("\n                        npm run dev\n                    ")])])]),e._v(" "),n("li",[e._v("Go to the link provided by the command. Try inserting a new data by filling the required textfields and clicking the insert button:\n                    "),n("div",{staticClass:"centerimg"},[n("img",{attrs:{src:"images/reactapi.webp"}})])])])])],1)],1)},[],!1,null,null,null).exports}}]);