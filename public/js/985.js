"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[985],{4985:(t,e,n)=>{n.r(e),n.d(e,{default:()=>s});const a={data:function(){return{requirements:[{title:"MongoDB",link:"https://www.mongodb.com/try/download/community"},{title:"MongoshDB Shell",link:"https://www.mongodb.com/docs/mongodb-shell/"},{title:"MongoDB php extension",link:"https://pecl.php.net/package/mongodb"}]}},mounted:function(){window.Prism=window.Prism||{},window.Prism.manual=!0,Prism.highlightAll()}};const s=(0,n(7658).A)(a,function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"ma-4"},[n("v-row",[n("v-col",{attrs:{cols:"12",xl:"10",lg:"9",md:"9",sm:"8"}},[n("div",{staticClass:"d-flex align-center",staticStyle:{height:"100%"}},[n("h1",[t._v("Database Setup with MongoDB")])])]),t._v(" "),n("v-col",[n("h3",[t._v("REQUIREMENTS:")]),t._v(" "),n("ol",t._l(t.requirements,function(e,a){return n("li",{key:a},[null==e.link?n("span",[t._v(t._s(e.title))]):n("a",{attrs:{href:e.link,target:"_blank"}},[t._v(t._s(e.title))])])}),0)])],1),t._v(" "),n("v-card",{staticClass:"mt-5"},[n("v-card-title",{staticClass:"blue white--text"},[t._v("MAKE DATABASE")]),t._v(" "),n("v-card-text",[n("ul",[n("li",[t._v("After installing the required software/extensions. Open "),n("b",[t._v("mongoshdb shell")]),t._v(" and initialize it\n                    "),n("pre",{staticClass:"command-line",attrs:{"data-prompt":"Please enter a MongoDB connection string (Default: mongodb://localhost/):"}},[n("code",{staticClass:"language-bash"},[t._v("\n                        mongosh\n                    ")])])]),t._v(" "),n("li",[t._v("Use the following command to make a "),n("b",[t._v("db")]),t._v(". If the db name already created, it will use the existing one instead of creating a new one.\n                    "),n("pre",{staticClass:"command-line",attrs:{"data-prompt":"mongosh>"}},[n("code",{staticClass:"language-bash"},[t._v("\n                        use sample_db\n                    ")])])]),t._v(" "),n("li",[t._v("Insert a data from "),n("b",[t._v("user")]),t._v(" table. Just like db, it will a make a new one if the table is not yet existing. "),n("b",[t._v("db.table_name.insertOne()")]),t._v(" "),n("pre",{staticClass:"command-line",attrs:{"data-prompt":"sample_db>"}},[n("code",{staticClass:"language-bash"},[t._v('\n                        db.user.insertOne({name:"Jim", age:25})\n                    ')])])])])])],1),t._v(" "),n("v-card",{staticClass:"mt-5"},[n("v-card-title",{staticClass:"blue white--text"},[t._v("ADD MONGODB")]),t._v(" "),n("v-card-text",[n("ul",[n("li",[t._v("Open CMD and go to Project folder\n                    "),n("pre",{staticClass:"command-line",attrs:{"data-prompt":"C:\\Users\\Jim>"}},[n("code",{staticClass:"language-bash"},[t._v("\n                        cd C:\\Apache24\\htdocs\\projectname\n                    ")])])]),t._v(" "),n("li",[t._v("Install MongoDB and .env dependencies\n                    "),n("pre",{staticClass:"command-line",attrs:{"data-prompt":"C:\\Apache24\\htdocs\\projectname>"}},[n("code",{staticClass:"language-bash"},[t._v("\n                        npm install mongoose dotenv\n                    ")])])])])])],1),t._v(" "),n("v-card",{staticClass:"mt-5"},[n("v-card-title",{staticClass:"blue white--text"},[t._v("SETUP")]),t._v(" "),n("v-card-text",[n("ul",[n("li",[t._v("Create "),n("b",[t._v(".env")]),t._v(" to the root folder and put this code:\n                    "),n("pre",[n("code",{staticClass:"language-ini"},[t._v("\n                        MONGO_URI=mongodb://localhost:27017/sample_db\n                    ")])])]),t._v(" "),n("li",[t._v("Edit "),n("b",[t._v("server/server.ts")]),t._v(" with this code:\n                    "),n("pre",[n("code",{staticClass:"language-js"},[t._v("\n                        import express from 'express';\n                        import cors from 'cors';\n                        import mongoose from \"mongoose\";\n                        import dotenv from 'dotenv';\n                        \n                        dotenv.config();\n                        const app = express();\n\n                        app.use(cors());\n                        app.use(express.json());\n\n                        const PORT = process.env.PORT || 8080;\n\n                        // Connect to MongoDB\n                        const uri: string =\n                            process.env.MONGO_URI || 'mongodb://localhost:27017/db_name';\n\n                        let db;\n                        (async () => {\n                            try {\n                                let conn = await mongoose.connect(uri);\n                                db = conn.connection.db\n                                console.log(uri);\n                            } catch(error) {\n                                console.error(error);\n                            }\n                        })();\n\n\n                        app.get('/', async (req, res) => {\n                            let r = await db.collection(\"user\").find().toArray();;\n                            res.send(r);\n                        });\n\n                        app.listen(PORT, () => {\n                            console.log(`Server is running on port ${PORT}`);\n                        });\n                    ")])])])])])],1),t._v(" "),n("v-card",{staticClass:"mt-5"},[n("v-card-title",{staticClass:"blue white--text"},[t._v("DEPLOYMENT")]),t._v(" "),n("v-card-text",[n("ul",[n("li",[t._v("Go back to CMD and deploy the project\n                    "),n("pre",{staticClass:"command-line",attrs:{"data-prompt":"C:\\Apache24\\htdocs\\projectname>"}},[n("code",{staticClass:"language-bash"},[t._v("\n                        npm run dev\n                    ")])])]),t._v(" "),n("li",[t._v("Go to the link provided by the command. Click the label "),n("b",[t._v("Click Here")]),t._v(" and inspect element to see the get data.\n                    "),n("div",{staticClass:"centerimg"},[n("img",{attrs:{src:"images/reactdatabase.webp"}})])])])])],1)],1)},[],!1,null,null,null).exports}}]);